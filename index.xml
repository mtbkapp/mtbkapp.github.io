<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Recent Content on mtbkapp&#39;s blog </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://mtbkapp.github.io/index.xml/</link>
    <language>en-us</language>
    
    
    <updated>Sat, 09 May 2015 14:48:28 MDT</updated>
    
    <item>
      <title>Conway&#39;s Game of Life in ClojureScript / Om</title>
      <link>http://mtbkapp.github.io/post/cljs-life/</link>
      <pubDate>Sat, 09 May 2015 14:48:28 MDT</pubDate>
      
      <guid>http://mtbkapp.github.io/post/cljs-life/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/mtbkapp/cljs-life&#34;&gt;Code on Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;app&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;/cljs-life/cljs-life.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Click on a cell to toggle it&amp;rsquo;s state.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More Daylight</title>
      <link>http://mtbkapp.github.io/post/more-daylight/</link>
      <pubDate>Tue, 21 Oct 2014 20:15:59 MDT</pubDate>
      
      <guid>http://mtbkapp.github.io/post/more-daylight/</guid>
      <description>&lt;p&gt;In a previous &lt;a href=&#34;../daylight&#34;&gt;post&lt;/a&gt; I wrote a tiny bit of
&lt;a href=&#34;http://clojure.org&#34;&gt;Clojure&lt;/a&gt; and some JavaScript/&lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt; to
&lt;em&gt;see&lt;/em&gt; how the amount of daylight changes through out the year in Salt Lake City.
I wanted to see how daylight changes in a couple of other places so I changed
the code from the last post and wrote the following.&lt;/p&gt;

&lt;p&gt;&lt;p id=&#34;vis&#34;&gt;&lt;/p&gt;
&lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;/more-daylight/style.css&#34;&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;/js/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;/js/underscore.min.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;/more-daylight/vis.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://gist.github.com/mtbkapp/9bb0dab4f1a3f38f533f.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>(Mac/G)Vim and Clojure</title>
      <link>http://mtbkapp.github.io/post/clojure-vim/</link>
      <pubDate>Wed, 17 Sep 2014 06:18:06 MDT</pubDate>
      
      <guid>http://mtbkapp.github.io/post/clojure-vim/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using Clojure for a little while now (about 2 years). I&amp;rsquo;ve used Vim
for longer in the form of GVim on Windows/Linus and MacVim on Mac OS X and of
course vim at the console. For a bit I didn&amp;rsquo;t have a good setup to combine them.
Then after geting into Clojure a little longer settled on a Vim/Clojure
setup. I use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tpope/vim-pathogen&#34;&gt;Pathogen&lt;/a&gt; for plugin management&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tpope/vim-fireplace&#34;&gt;vim-fireplace&lt;/a&gt; for connecting to a
nrepl.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guns/vim-clojure-static&#34;&gt;vim-clojure-static&lt;/a&gt; for syntax
highlighting, indentation, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/altercation/vim-colors-solarized&#34;&gt;vim-colors-solarized&lt;/a&gt;
for awesome easy to read colors in dark and bright situations. Choosing colors
is hard and Ethen Schoonover, the author of vim-colors-solarized, has
done a lot of hard &lt;a href=&#34;http://ethanschoonover.com/solarized&#34;&gt;work&lt;/a&gt; to make it
great.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Installing these plugins was just as easy as following the instructions in each
project&amp;rsquo;s readme file. Tim Pope&amp;rsquo;s Pathogen really helps with this. I wouldn&amp;rsquo;t
run Vim with plugins if it didn&amp;rsquo;t exist.  One of the great things about Clojure
is the possibility of &lt;em&gt;interactive developement&lt;/em&gt;.  Vim-fireplace brings this
idea to Vim. It will automatically read the &lt;code&gt;.nrepl-port&lt;/code&gt; file and
connect if that file doesn&amp;rsquo;t exist in the project (because an nrepl hasn&amp;rsquo;t been
started or if I want to connect to a one off repl) then the
&lt;code&gt;:Connect&lt;/code&gt; command can be used. After that there are 2 commands I
use the most: the evaluate command &lt;code&gt;cpp&lt;/code&gt; and the standard command to
 lookup documentation &lt;code&gt;K&lt;/code&gt;. The &lt;code&gt;cpp&lt;/code&gt; command just sends
the form under the cursor to the nrepl server for evaluation and displays the
results. The &lt;code&gt;K&lt;/code&gt; command will simply evaluate &lt;code&gt;(clojure.repl/doc
symbol-under-cursor)&lt;/code&gt;. More usage and more features can be found on the
individual project pages. Having the ability to evaluate code and get
documentation right in Vim is great and very productive.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve done work on Clojure projects that use
&lt;a href=&#34;https://github.com/ring-clojure/ring&#34;&gt;Ring&lt;/a&gt; and the
&lt;a href=&#34;https://github.com/weavejester/lein-ring&#34;&gt;lein-ring&lt;/a&gt; plugin.
Lein-ring doesn&amp;rsquo;t start an nrepl by default but it can be configured to do so.
A configuration in a &lt;code&gt;project.clj&lt;/code&gt; file like the one below would
work:&lt;/p&gt;

&lt;pre&gt;
:ring {:handler your.handler.ns.here
       :port 8888
       :nrepl {:start? true}}
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Daylight</title>
      <link>http://mtbkapp.github.io/post/daylight/</link>
      <pubDate>Tue, 16 Sep 2014 10:45:41 UTC</pubDate>
      
      <guid>http://mtbkapp.github.io/post/daylight/</guid>
      <description>&lt;p&gt;A colleague challenged my assumption that the amount of daylight in a day
changes at the same rate. Something like 2 minutes per day. I wanted to find
out what actually happens.&lt;/p&gt;

&lt;p&gt;The United States Naval Observatory has pages to get the sun rise and sun set
times for a year &lt;a href=&#34;http://aa.usno.navy.mil/data/docs/RS_OneYear.php&#34;&gt;here&lt;/a&gt;. The
data for Salt Lake City, Utah is shown below. The data show the rise/set times
for each day in the year. The data are not adjusted for standard daylight time
,and thats good in this case.&lt;/p&gt;

&lt;pre&gt;
       Jan.       Feb.       Mar.       Apr.       May        June       July       Aug.       Sept.      Oct.       Nov.       Dec.
Day Rise  Set  Rise  Set  Rise  Set  Rise  Set  Rise  Set  Rise  Set  Rise  Set  Rise  Set  Rise  Set  Rise  Set  Rise  Set  Rise  Set
     h m  h m   h m  h m   h m  h m   h m  h m   h m  h m   h m  h m   h m  h m   h m  h m   h m  h m   h m  h m   h m  h m   h m  h m
01  0752 1711  0737 1745  0701 1819  0611 1852  0526 1924  0458 1953  0500 2003  0524 1943  0555 1900  0624 1809  0658 1724  0732 1701
02  0752 1712  0736 1746  0700 1820  0609 1853  0525 1925  0458 1953  0501 2002  0525 1942  0556 1858  0625 1808  0659 1722  0733 1700
03  0752 1713  0735 1748  0658 1821  0608 1854  0523 1926  0458 1954  0501 2002  0526 1941  0557 1856  0626 1806  0700 1721  0734 1700
04  0752 1713  0734 1749  0657 1822  0606 1856  0522 1927  0457 1955  0502 2002  0527 1939  0557 1855  0627 1804  0702 1720  0735 1700
05  0752 1714  0733 1750  0655 1823  0604 1857  0521 1928  0457 1955  0502 2002  0528 1938  0558 1853  0628 1803  0703 1719  0736 1700
06  0752 1715  0732 1751  0654 1824  0603 1858  0520 1929  0457 1956  0503 2002  0529 1937  0559 1851  0629 1801  0704 1718  0737 1700
07  0752 1716  0731 1753  0652 1826  0601 1859  0519 1930  0456 1957  0503 2001  0530 1936  0600 1850  0630 1800  0705 1717  0738 1700
08  0752 1717  0730 1754  0650 1827  0600 1900  0518 1931  0456 1957  0504 2001  0531 1935  0601 1848  0631 1758  0706 1716  0739 1700
09  0751 1718  0729 1755  0649 1828  0558 1901  0516 1932  0456 1958  0505 2000  0532 1933  0602 1846  0632 1756  0707 1715  0740 1700
10  0751 1719  0728 1756  0647 1829  0556 1902  0515 1933  0456 1958  0505 2000  0533 1932  0603 1845  0633 1755  0709 1714  0741 1700
11  0751 1720  0726 1758  0646 1830  0555 1903  0514 1934  0456 1959  0506 2000  0534 1931  0604 1843  0635 1753  0710 1713  0742 1700
12  0751 1722  0725 1759  0644 1831  0553 1904  0513 1935  0456 1959  0507 1959  0535 1929  0605 1841  0636 1752  0711 1712  0742 1700
13  0750 1723  0724 1800  0642 1832  0552 1905  0512 1936  0456 2000  0508 1959  0536 1928  0606 1840  0637 1750  0712 1711  0743 1700
14  0750 1724  0723 1801  0641 1833  0550 1906  0511 1937  0456 2000  0508 1958  0537 1927  0607 1838  0638 1749  0713 1710  0744 1701
15  0749 1725  0721 1802  0639 1834  0549 1907  0510 1938  0456 2001  0509 1957  0538 1925  0608 1836  0639 1747  0714 1709  0745 1701
16  0749 1726  0720 1804  0637 1835  0547 1908  0509 1939  0456 2001  0510 1957  0539 1924  0609 1835  0640 1746  0716 1708  0745 1701
17  0749 1727  0719 1805  0636 1836  0546 1909  0508 1940  0456 2001  0511 1956  0540 1923  0610 1833  0641 1744  0717 1708  0746 1701
18  0748 1728  0717 1806  0634 1838  0544 1910  0508 1941  0456 2002  0512 1955  0541 1921  0611 1831  0642 1743  0718 1707  0747 1702
19  0748 1729  0716 1807  0632 1839  0543 1911  0507 1942  0456 2002  0512 1955  0542 1920  0612 1830  0643 1741  0719 1706  0747 1702
20  0747 1731  0715 1808  0631 1840  0541 1912  0506 1943  0456 2002  0513 1954  0543 1918  0613 1828  0644 1740  0720 1706  0748 1703
21  0746 1732  0713 1810  0629 1841  0540 1913  0505 1944  0456 2002  0514 1953  0544 1917  0614 1826  0645 1738  0721 1705  0748 1703
22  0746 1733  0712 1811  0627 1842  0538 1914  0504 1945  0457 2002  0515 1952  0545 1915  0615 1824  0647 1737  0723 1704  0749 1704
23  0745 1734  0710 1812  0626 1843  0537 1915  0504 1945  0457 2003  0516 1952  0546 1914  0616 1823  0648 1735  0724 1704  0749 1704
24  0744 1735  0709 1813  0624 1844  0535 1916  0503 1946  0457 2003  0517 1951  0547 1912  0617 1821  0649 1734  0725 1703  0750 1705
25  0744 1737  0707 1814  0622 1845  0534 1918  0502 1947  0457 2003  0518 1950  0548 1911  0618 1819  0650 1733  0726 1703  0750 1705
26  0743 1738  0706 1815  0621 1846  0533 1919  0502 1948  0458 2003  0519 1949  0549 1909  0619 1818  0651 1731  0727 1702  0750 1706
27  0742 1739  0704 1817  0619 1847  0531 1920  0501 1949  0458 2003  0519 1948  0550 1908  0620 1816  0652 1730  0728 1702  0751 1707
28  0741 1740  0703 1818  0617 1848  0530 1921  0500 1950  0459 2003  0520 1947  0551 1906  0621 1814  0653 1729  0729 1702  0751 1707
29  0740 1742             0616 1849  0529 1922  0500 1950  0459 2003  0521 1946  0552 1904  0622 1813  0655 1727  0730 1701  0751 1708
30  0739 1743             0614 1850  0527 1923  0459 1951  0500 2003  0522 1945  0553 1903  0623 1811  0656 1726  0731 1701  0751 1709
31  0738 1744             0613 1851             0459 1952             0523 1944  0554 1901             0657 1725             0752 1710
&lt;/pre&gt; 

&lt;p&gt;I&amp;rsquo;m going to show how I process this data in Clojure and then visualize it with
JavaScript using the &lt;a href=&#34;http://d3js.org/&#34;&gt;D3.js&lt;/a&gt; library. I think this a pretty
good example of using Clojure&amp;rsquo;s &lt;a href=&#34;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/-&amp;gt;&#34;&gt;thread macro&lt;/a&gt;.
The first thing I did was read the above data from a previously saved file,
drop the first 3 rows, then use a regular expression to get all the columns
of times, and finally I partition the times into pairs. I include the columns
that don&amp;rsquo;t have any times so that each column has the same number of rows.
That gave me a seq that has a seq for each row.  Each row seq contains a two
tuple like seq that contains the sunrise and sunset time for each day. I&amp;rsquo;m not
that interested in how much daylight changes between two specific days so I
don&amp;rsquo;t hold on to that date information.&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://gist.github.com/mtbkapp/a9fb0d6de53e56aa74ad.js?file=pre-rotate&#34;&gt;&lt;/script&gt;

&lt;pre&gt;
(((&#34;0752&#34; &#34;1711&#34;)
  (&#34;0737&#34; &#34;1745&#34;)
  (&#34;0701&#34; &#34;1819&#34;)
  (&#34;0611&#34; &#34;1852&#34;)
  (&#34;0526&#34; &#34;1924&#34;)
  (&#34;0458&#34; &#34;1953&#34;)
  (&#34;0500&#34; &#34;2003&#34;)
  (&#34;0524&#34; &#34;1943&#34;)
  (&#34;0555&#34; &#34;1900&#34;)
  (&#34;0624&#34; &#34;1809&#34;)
  (&#34;0658&#34; &#34;1724&#34;)
  (&#34;0732&#34; &#34;1701&#34;))
  ...)
&lt;/pre&gt;

&lt;p&gt;However I don&amp;rsquo;t want seqs for times for each row&amp;ndash;I want each column. So the
next function in the chain does this transformation. This
&lt;code&gt;rotate-coll&lt;/code&gt; function just maps over the range from 0 to the number
of columns and plucks each pair out of each column and constructs a new seq.&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://gist.github.com/mtbkapp/a9fb0d6de53e56aa74ad.js?file=rotate-coll&#34;&gt;&lt;/script&gt;

&lt;pre&gt;
(((&#34;0752&#34; &#34;1711&#34;)
  (&#34;0752&#34; &#34;1712&#34;)
  (&#34;0752&#34; &#34;1713&#34;)
  (&#34;0752&#34; &#34;1713&#34;)
  (&#34;0752&#34; &#34;1714&#34;)
  (&#34;0752&#34; &#34;1715&#34;)
  (&#34;0752&#34; &#34;1716&#34;)
  (&#34;0752&#34; &#34;1717&#34;)
  (&#34;0751&#34; &#34;1718&#34;)
  (&#34;0751&#34; &#34;1719&#34;)
  (&#34;0751&#34; &#34;1720&#34;)
  (&#34;0751&#34; &#34;1722&#34;)
  (&#34;0750&#34; &#34;1723&#34;)
  (&#34;0750&#34; &#34;1724&#34;)
  (&#34;0749&#34; &#34;1725&#34;)
  (&#34;0749&#34; &#34;1726&#34;)
  (&#34;0749&#34; &#34;1727&#34;)
  (&#34;0748&#34; &#34;1728&#34;)
  (&#34;0748&#34; &#34;1729&#34;)
  (&#34;0747&#34; &#34;1731&#34;)
  (&#34;0746&#34; &#34;1732&#34;)
  (&#34;0746&#34; &#34;1733&#34;)
  (&#34;0745&#34; &#34;1734&#34;)
  (&#34;0744&#34; &#34;1735&#34;)
  (&#34;0744&#34; &#34;1737&#34;)
  (&#34;0743&#34; &#34;1738&#34;)
  (&#34;0742&#34; &#34;1739&#34;)
  (&#34;0741&#34; &#34;1740&#34;)
  (&#34;0740&#34; &#34;1742&#34;)
  (&#34;0739&#34; &#34;1743&#34;)
  (&#34;0738&#34; &#34;1744&#34;))
  ...)
&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m almost done with the data wrangling part of answering this question. Next
I just want to &lt;code&gt;flatten&lt;/code&gt; the seqs down to one seq and then remove
the empty strings that occur for months with less than 31 days. Up till now
the code looks like the following and produces the following output.&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://gist.github.com/mtbkapp/a9fb0d6de53e56aa74ad.js?file=post-flatten-and-filter&#34;&gt;&lt;/script&gt;

&lt;pre&gt;
(&#34;0752&#34; &#34;1711&#34; &#34;0752&#34; &#34;1712&#34; &#34;0752&#34; &#34;1713&#34; &#34;0752&#34; &#34;1713&#34; ...) 
&lt;/pre&gt;

&lt;p&gt;So the next thing I need to do is convert these times into actual numbers. I
picked minutes. It&amp;rsquo;s a simple calculation of getting the minutes by
&lt;code&gt;mod&lt;/code&gt;-ing the time by 100 and then adding the hours by taking the
time dividing by 100 then multiplying by 60. I intentionally use the
&lt;code&gt;quot&lt;/code&gt; function instead of the &lt;code&gt;/&lt;/code&gt; function to truncate
the remainder instead of converting it to decimal number. Then to pair the
sunrise and sunset times again using the &lt;code&gt;partition&lt;/code&gt; function again.
The next thing is to do the actual subtraction of sunrise from sunset. The
output is now a seq of numbers that represent the minutes in each day of the
year. A count of the seq confirms this.&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://gist.github.com/mtbkapp/a9fb0d6de53e56aa74ad.js?file=first-calc&#34;&gt;&lt;/script&gt;

&lt;pre&gt;
(559 560 561 561 562 563 564 ...)
&lt;/pre&gt;

&lt;p&gt;The next thing I want to do is to be able to &lt;strong&gt;see&lt;/strong&gt; the differences. To do this I
first will convert the data to JSON and so I can import it with D3 and write a
visualization.&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://gist.github.com/mtbkapp/a9fb0d6de53e56aa74ad.js?file=all-clj&#34;&gt;&lt;/script&gt;

&lt;pre&gt;
[559,560,561,561,562,563,564, ...]&lt;/pre&gt;
&lt;/pre&gt;

&lt;p&gt;Below is the line graph I made. It shows easily that the amount of daylight in
a day in Salt Lake City doesn&amp;rsquo;t change a lot around equinoxes and changes the
most during the solstices.&lt;/p&gt;

&lt;p&gt;&lt;p id=&#34;vis&#34;&gt;&lt;/p&gt;
&lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;/daylight/style.css&#34;&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;/js/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;/daylight/vis.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The JavaScript that generates the line graph is shown below. The data generated
previously is imported as &lt;code&gt;duration.json&lt;/code&gt;.
&lt;script type=&#34;text/javascript&#34; src=&#34;https://gist.github.com/mtbkapp/a9fb0d6de53e56aa74ad.js?file=vis&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>http://mtbkapp.github.io/post/first/</link>
      <pubDate>Tue, 19 Aug 2014 09:53:19 UTC</pubDate>
      
      <guid>http://mtbkapp.github.io/post/first/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve wanted to have a blog for a while now and am finally getting to it. Do I
care if anyone reads it? Nope. It&amp;rsquo;s mainly for me to remember things that I&amp;rsquo;ve
done that I think are interesting. I guess it&amp;rsquo;s possible for someone to stumble
across this and find something useful. It&amp;rsquo;s also possible that no one besides
me will ever read it.&lt;/p&gt;

&lt;p&gt;I met &lt;a href=&#34;http://spf13.com/&#34;&gt;spf13&lt;/a&gt; at Strange Loop last year and found out that
he has a cool and fast static site generator called
&lt;a href=&#34;http://hugo.spf13.com/&#34;&gt;Hugo&lt;/a&gt;. I decided to use it for this blog. Also I&amp;rsquo;m
currently not that great at CSS so I used &lt;a href=&#34;http://imperavi.com/kube/&#34;&gt;Kube&lt;/a&gt;
for that. I think Hugo and Kube and a lot of other things are pretty dang cool
and am glad that their authors have shared their work.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>